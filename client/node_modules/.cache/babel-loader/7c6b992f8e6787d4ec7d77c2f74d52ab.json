{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, emailSignInSuccess, emailSignInFailure } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/users/nikos val/myshopapp/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","UserActionTypes","signInSuccess","signInFailure","emailSignInSuccess","emailSignInFailure","signInWithGoogle","user","signInWithPopup","getSnapshotFromUserAuth","error","userAuth","userRef","userSnapshot","get","id","data","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAmBC,GAAnB,EAAuBC,GAAvB,EAA2BC,IAA3B,QAAsC,oBAAtC;AACA,SAAQC,IAAR,EAAaC,cAAb,EAA4BC,yBAA5B,QAA4D,+BAA5D;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,aAAR,EAAsBC,aAAtB,EAAoCC,kBAApC,EAAuDC,kBAAvD,QAAgF,gBAAhF;AAEA,OAAO,UAAUC,gBAAV,GAA4B;AACnC,MAAG;AACC,UAAM;AAACC,MAAAA;AAAD,QAAO,MAAMT,IAAI,CAACU,eAAL,CAAqBT,cAArB,CAAnB;AACA,UAAMU,uBAAuB,CAACF,IAAD,CAA7B;AACH,GAHD,CAKA,OAAMG,KAAN,EAAY;AACZ,UAAMf,GAAG,CAACQ,aAAa,CAACO,KAAD,CAAd,CAAT;AACC;AACA;AAED,OAAO,UAAUD,uBAAV,CAAkCE,QAAlC,EAA2C;AAC9C,MAAG;AACH,UAAMC,OAAO,GAAC,MAAMf,IAAI,CAACG,yBAAD,EAA2BW,QAA3B,CAAxB;AACA,UAAME,YAAY,GAAC,MAAMD,OAAO,CAACE,GAAR,EAAzB;AACA,UAAMnB,GAAG,CAAEO,aAAa,CAAE;AAACa,MAAAA,EAAE,EAACF,YAAY,CAACE,EAAjB;AAAoB,SAAGF,YAAY,CAACG,IAAb;AAAvB,KAAF,CAAf,CAAT;AAEC,GALD,CAKC,OAAMN,KAAN,EAAY;AACV,UAAMf,GAAG,CAACQ,aAAa,CAACO,KAAD,CAAd,CAAT;AACF;AACJ;AAED,OAAO,UAAUO,mBAAV,GAA+B;AAClC,QAAMvB,UAAU,CAACO,eAAe,CAACiB,oBAAjB,EAAsCZ,gBAAtC,CAAhB;AAEH;AAED,OAAO,UAAUa,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAT,CAA1B,EAAqD;AAC5D,MAAI;AACJ,UAAM;AAACf,MAAAA;AAAD,QAAO,MAAMT,IAAI,CAACyB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CAAnB;AACA,UAAMb,uBAAuB,CAACF,IAAD,CAA7B;AACC,GAHD,CAGC,OAAMG,KAAN,EAAY;AACV,UAAMf,GAAG,CAACQ,aAAa,CAACO,KAAD,CAAd,CAAT;AACF;AAEA;AAED,OAAO,UAAUc,kBAAV,GAA8B;AACjC,QAAM9B,UAAU,CAACO,eAAe,CAACwB,mBAAjB,EAAqCN,eAArC,CAAhB;AACH;AAED,OAAO,UAAUO,SAAV,GAAqB;AACxB,QAAM9B,GAAG,CAAC,CAACC,IAAI,CAACoB,mBAAD,CAAL,EAA2BpB,IAAI,CAAC2B,kBAAD,CAA/B,CAAD,CAAT;AAEH","sourcesContent":["import {takeLatest,put,all,call} from 'redux-saga/effects';\r\nimport {auth,googleProvider,createUserProfileDocument} from '../../firebase/firebase.utils';\r\nimport UserActionTypes from './user.types';\r\nimport {signInSuccess,signInFailure,emailSignInSuccess,emailSignInFailure} from './user.actions';\r\n\r\nexport function* signInWithGoogle(){\r\ntry{\r\n    const {user}=yield auth.signInWithPopup(googleProvider);\r\n    yield getSnapshotFromUserAuth(user);\r\n}\r\n\r\ncatch(error){\r\nyield put(signInFailure(error));\r\n}\r\n}\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth){\r\n    try{\r\n    const userRef=yield call(createUserProfileDocument,userAuth);\r\n    const userSnapshot=yield userRef.get();\r\n    yield put (signInSuccess ({id:userSnapshot.id,...userSnapshot.data()})\r\n    );\r\n    }catch(error){\r\n       yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInWithGoogle);\r\n\r\n}\r\n\r\nexport function* signInWithEmail({payload:{email,password}}){\r\ntry {\r\nconst {user}=yield auth.signInWithEmailAndPassword(email,password);\r\nyield getSnapshotFromUserAuth(user);\r\n}catch(error){\r\n   yield put(signInFailure(error));\r\n}\r\n\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail);\r\n}\r\n\r\nexport function* userSagas(){\r\n    yield all([call(onGoogleSignInStart),call(onEmailSignInStart)]);\r\n\r\n}"]},"metadata":{},"sourceType":"module"}