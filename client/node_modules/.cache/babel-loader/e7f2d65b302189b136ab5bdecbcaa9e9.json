{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, emailSignInSuccess, emailSignInFailure, checkUserSession, signOutSuccess, signOutFailure, signUpSuccess, signUpFailure } from './user.actions';\nimport SignUp from '../../components/sign-up/sign-up.component';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* getSnapshotFromUserAuth(userAuth, additionalData) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth, additionalData);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, checkUserSession);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START, signOut);\n}\nexport function* signUp({\n  payload: {\n    email,\n    password,\n    displayName\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.createUserWithEmailAndPassword(email, password);\n    yield put(signUpSuccess({\n      user,\n      additionalData: {\n        displayName\n      }\n    }));\n  } catch (error) {\n    put(signUpFailure(error));\n  }\n}\nexport function* signInAfterSignUp({\n  payload: {\n    user,\n    additionalData\n  }\n}) {\n  yield getSnapshotFromUserAuth(user, additionalData);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart), call(onSignUpStart), call(onSignUpSuccess)]);\n}\nexport function* onSignUpStart() {\n  yield takeLatest(UserActionTypes.SIGN_UP_START, signUp);\n}\nexport function* onSignUpSuccess() {\n  yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS, signInAfterSignUp);\n}","map":{"version":3,"sources":["C:/users/nikos val/myshopapp/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","getCurrentUser","UserActionTypes","signInSuccess","signInFailure","emailSignInSuccess","emailSignInFailure","checkUserSession","signOutSuccess","signOutFailure","signUpSuccess","signUpFailure","SignUp","signInWithGoogle","user","signInWithPopup","getSnapshotFromUserAuth","error","userAuth","additionalData","userRef","userSnapshot","get","id","data","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","signUp","displayName","createUserWithEmailAndPassword","signInAfterSignUp","userSagas","onSignUpStart","onSignUpSuccess","SIGN_UP_START","SIGN_UP_SUCCESS"],"mappings":"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","sourcesContent":["import {takeLatest,put,all,call} from 'redux-saga/effects';\r\nimport {auth,googleProvider,createUserProfileDocument,getCurrentUser} from '../../firebase/firebase.utils';\r\nimport UserActionTypes from './user.types';\r\nimport {signInSuccess,signInFailure,emailSignInSuccess,emailSignInFailure, checkUserSession,signOutSuccess,signOutFailure,signUpSuccess,signUpFailure} from './user.actions';\r\nimport SignUp from '../../components/sign-up/sign-up.component';\r\n\r\nexport function* signInWithGoogle(){\r\ntry{\r\n    const {user}=yield auth.signInWithPopup(googleProvider);\r\n    yield getSnapshotFromUserAuth(user);\r\n}\r\n\r\ncatch(error){\r\nyield put(signInFailure(error));\r\n}\r\n}\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth,additionalData){\r\n    try{\r\n    const userRef=yield call(createUserProfileDocument,userAuth,additionalData);\r\n    const userSnapshot=yield userRef.get();\r\n    yield put (signInSuccess ({id:userSnapshot.id,...userSnapshot.data()})\r\n    );\r\n    }catch(error){\r\n       yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signOut(){\r\n    try{\r\n        yield auth.signOut();\r\n        yield (put(signOutSuccess()))\r\n    }catch(error)\r\n        {\r\n              yield put(signOutFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInWithGoogle);\r\n\r\n}\r\n\r\nexport function* signInWithEmail({payload:{email,password}}){\r\ntry {\r\nconst {user}=yield auth.signInWithEmailAndPassword(email,password);\r\nyield getSnapshotFromUserAuth(user);\r\n}catch(error){\r\n   yield put(signInFailure(error));\r\n}\r\n\r\n}\r\n\r\nexport function* isUserAuthenticated(){\r\n\r\n    try{\r\n       const userAuth=yield getCurrentUser();\r\n       if(!userAuth) return;\r\n       yield getSnapshotFromUserAuth(userAuth);\r\n\r\n\r\n    }catch(error){\r\n\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession(){\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION,checkUserSession);\r\n}\r\n\r\nexport function* onSignOutStart(){\r\n    yield takeLatest (UserActionTypes.SIGN_OUT_START,signOut)\r\n}\r\n\r\nexport function* signUp({payload:{email,password,displayName}}){\r\n    try{\r\n        const {user}=yield auth.createUserWithEmailAndPassword(email,password);\r\n        yield put (signUpSuccess({user,additionalData:{displayName}}))\r\n\r\n    }catch(error){\r\n\r\n        put (signUpFailure(error))\r\n    }\r\n\r\n\r\n}\r\n\r\nexport function* signInAfterSignUp({payload:{user,additionalData}}){\r\n\r\n    yield getSnapshotFromUserAuth(user,additionalData);\r\n\r\n}\r\n\r\nexport function* userSagas(){\r\n    yield all([call(onGoogleSignInStart),call(onEmailSignInStart),call(onCheckUserSession),call(onSignOutStart),call(onSignUpStart),call(onSignUpSuccess)]);\r\n\r\n}\r\n\r\nexport function* onSignUpStart(){\r\n    yield takeLatest(UserActionTypes.SIGN_UP_START,signUp)\r\n}\r\n\r\nexport function* onSignUpSuccess(){\r\n    yield takeLatest(UserActionTypes.SIGN_UP_SUCCESS,signInAfterSignUp);\r\n}"]},"metadata":{},"sourceType":"module"}