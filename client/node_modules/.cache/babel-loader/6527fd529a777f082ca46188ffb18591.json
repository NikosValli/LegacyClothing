{"ast":null,"code":"import ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport const fetchCollectionsStart = () => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_START\n});\nexport const fetchCollectionsSuccess = collectionsMap => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\n  payload: collectionsMap\n});\nexport const fetchCollectionsFailure = errorMessage => ({\n  type: ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\n  payload: errorMessage\n});\nexport const fetchCollectionsStartAsync = () => {\n  return dispatch => {\n    const collectionRef = firestore.collection('collections');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot); //updateCollections(collectionsMap);\n\n      dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)));\n  };\n};","map":{"version":3,"sources":["C:/users/nikos val/myshopapp/client/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","fetchCollectionsSuccess","collectionsMap","FETCH_COLLECTIONS_SUCCESS","payload","fetchCollectionsFailure","errorMessage","FETCH_COLLECTIONS_FAILURE","fetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","catch","error","message"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,+BAAxD;AACA,OAAO,MAAMC,qBAAqB,GAAC,OAAO;AACtCC,EAAAA,IAAI,EAACJ,eAAe,CAACK;AADiB,CAAP,CAA5B;AAIP,OAAO,MAAMC,uBAAuB,GAACC,cAAc,KAAI;AACvDH,EAAAA,IAAI,EAACJ,eAAe,CAACQ,yBADkC;AAEvDC,EAAAA,OAAO,EAACF;AAF+C,CAAJ,CAA5C;AAKP,OAAO,MAAMG,uBAAuB,GAACC,YAAY,KAAI;AACjDP,EAAAA,IAAI,EAACJ,eAAe,CAACY,yBAD4B;AAEjDH,EAAAA,OAAO,EAACE;AAFyC,CAAJ,CAA1C;AAOP,OAAO,MAAME,0BAA0B,GAAC,MAAI;AAC5C,SAAOC,QAAQ,IAAI;AAClB,UAAMC,aAAa,GAACd,SAAS,CAACe,UAAV,CAAqB,aAArB,CAApB;AACAF,IAAAA,QAAQ,CAACX,qBAAqB,EAAtB,CAAR;AAEDY,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,MAAMC,QAAN,IAAiB;AACzC,YAAMZ,cAAc,GAAEL,+BAA+B,CAACiB,QAAD,CAArD,CADyC,CAEzC;;AACAL,MAAAA,QAAQ,CAACR,uBAAuB,CAACC,cAAD,CAAxB,CAAR;AACA,KAJD,EAIGa,KAJH,CAISC,KAAK,IAAEP,QAAQ,CAACJ,uBAAuB,CAACW,KAAK,CAACC,OAAP,CAAxB,CAJxB;AAMC,GAVD;AAYC,CAbM","sourcesContent":["import ShopActionTypes from './shop.types';\r\nimport {firestore,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\nexport const fetchCollectionsStart=() => ({\r\n    type:ShopActionTypes.FETCH_COLLECTIONS_START,\r\n});\r\n\r\nexport const fetchCollectionsSuccess=collectionsMap=> ({\r\ntype:ShopActionTypes.FETCH_COLLECTIONS_SUCCESS,\r\npayload:collectionsMap\r\n});\r\n\r\nexport const fetchCollectionsFailure=errorMessage=> ({\r\n    type:ShopActionTypes.FETCH_COLLECTIONS_FAILURE,\r\n    payload:errorMessage\r\n    });\r\n\r\n\r\n\r\nexport const fetchCollectionsStartAsync=()=>{\r\nreturn dispatch => { \r\n const collectionRef=firestore.collection('collections');\r\n dispatch(fetchCollectionsStart());\r\n\r\ncollectionRef.get().then(async snapshot =>{\r\n const collectionsMap= convertCollectionsSnapshotToMap(snapshot);\r\n //updateCollections(collectionsMap);\r\n dispatch(fetchCollectionsSuccess(collectionsMap));\r\n}).catch(error=>dispatch(fetchCollectionsFailure(error.message)));\r\n\r\n}\r\n\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}