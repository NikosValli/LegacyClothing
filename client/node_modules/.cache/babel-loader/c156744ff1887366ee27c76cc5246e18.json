{"ast":null,"code":"import firebase from 'firebase/app';\nimport 'firebase/firestore';\nimport 'firebase/auth';\nimport { unstable_batchedUpdates } from 'react-dom';\nconst config = {\n  apiKey: \"AIzaSyA6xgQ8-mlXI80XCzHEGOuH4sAjOrxtPqs\",\n  authDomain: \"my-db-e06fd.firebaseapp.com\",\n  databaseURL: \"https://my-db-e06fd.firebaseio.com\",\n  projectId: \"my-db-e06fd\",\n  storageBucket: \"my-db-e06fd.appspot.com\",\n  messagingSenderId: \"1086692179297\",\n  appId: \"1:1086692179297:web:a56410b29ca852f4df9920\",\n  measurementId: \"G-6FC8Z6FQE1\"\n};\nexport const createUserProfileDocument = async (userAuth, additionalData) => {\n  if (!userAuth) return;\n  const userref = firestore.doc(`users/${userAuth.uid}`);\n  const snapshot = await userref.get();\n\n  if (!snapshot.exists) {\n    const {\n      displayName,\n      email\n    } = userAuth;\n    const createdAt = new Date();\n\n    try {\n      await userref.set({\n        displayName,\n        email,\n        createdAt,\n        ...additionalData\n      });\n    } catch (error) {\n      console.log(\"error creating user\", error.message);\n    }\n  }\n\n  return userref;\n};\nexport const addCollectionAndDocuments = async (collectionKey, objectsToAdd) => {\n  const collectionref = firestore.collection(collectionKey);\n  const batch = firestore.batch();\n  objectsToAdd.forEach(obj => {\n    const newDocRef = collectionref.doc();\n    batch.set(newDocRef, obj);\n  });\n  return await batch.commit();\n};\nexport const convertCollectionsSnapshotToMap = collections => {\n  const transformedCollection = collections.docs.map(doc => {\n    const {\n      title,\n      items\n    } = doc.data();\n    return {\n      routeName: encodeURI(title.toLowerCase()),\n      id: doc.id,\n      title,\n      items\n    };\n  });\n  return transformedCollection.reduce((accumulator, collection) => {\n    accumulator[collection.title.toLowerCase()] = collection;\n    return accumulator;\n  }, {});\n};\nfirebase.initializeApp(config);\nexport const getCurrentUser = () => {\n  return new Promise((resolve, reject) => {\n    const unsubscribe = auth.onAuthStateChanged(userAuth => {\n      unsubscribe();\n      resolve(userAuth);\n    }, reject);\n  });\n};\nexport const auth = firebase.auth();\nexport const firestore = firebase.firestore();\nexport const googleProvider = new firebase.auth.GoogleAuthProvider();\ngoogleProvider.setCustomParameters({\n  prompt: 'select_account'\n});\nexport const signInWithGoogle = () => auth.signInWithPopup(googleProvider);\nexport default firebase;","map":{"version":3,"sources":["C:/users/nikos val/myshopapp/client/src/firebase/firebase.utils.js"],"names":["firebase","unstable_batchedUpdates","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","createUserProfileDocument","userAuth","additionalData","userref","firestore","doc","uid","snapshot","get","exists","displayName","email","createdAt","Date","set","error","console","log","message","addCollectionAndDocuments","collectionKey","objectsToAdd","collectionref","collection","batch","forEach","obj","newDocRef","commit","convertCollectionsSnapshotToMap","collections","transformedCollection","docs","map","title","items","data","routeName","encodeURI","toLowerCase","id","reduce","accumulator","initializeApp","getCurrentUser","Promise","resolve","reject","unsubscribe","auth","onAuthStateChanged","googleProvider","GoogleAuthProvider","setCustomParameters","prompt","signInWithGoogle","signInWithPopup"],"mappings":"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","sourcesContent":["import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\nimport { unstable_batchedUpdates } from 'react-dom';\r\n\r\nconst config={\r\n    apiKey: \"AIzaSyA6xgQ8-mlXI80XCzHEGOuH4sAjOrxtPqs\",\r\n    authDomain: \"my-db-e06fd.firebaseapp.com\",\r\n    databaseURL: \"https://my-db-e06fd.firebaseio.com\",\r\n    projectId: \"my-db-e06fd\",\r\n    storageBucket: \"my-db-e06fd.appspot.com\",\r\n    messagingSenderId: \"1086692179297\",\r\n    appId: \"1:1086692179297:web:a56410b29ca852f4df9920\",\r\n    measurementId: \"G-6FC8Z6FQE1\"\r\n  };\r\n\r\n  export const createUserProfileDocument=async (userAuth,additionalData) =>{\r\n   if(!userAuth) return;\r\n\r\nconst userref=firestore.doc(`users/${userAuth.uid}`);\r\nconst snapshot=await userref.get();\r\n   if (!snapshot.exists){\r\n       const {displayName,email} =userAuth;\r\n       const createdAt=new Date();\r\n\r\n       try {\r\n         await userref.set({\r\n        displayName,\r\n        email,\r\n        createdAt,\r\n        ...additionalData\r\n\r\n         })\r\n\r\n       }catch (error){\r\n        console.log(\"error creating user\",error.message);\r\n\r\n       }\r\n\r\n   }\r\n\r\n   return userref;\r\n\r\n  };\r\n\r\n  export const addCollectionAndDocuments=async (collectionKey,objectsToAdd)=>{\r\n    const collectionref=firestore.collection(collectionKey);\r\n    const batch=firestore.batch();\r\n    objectsToAdd.forEach(obj =>{\r\n      const newDocRef=collectionref.doc();\r\n      batch.set(newDocRef,obj);\r\n    });\r\n\r\n   return await batch.commit();\r\n  };\r\n\r\n  export const convertCollectionsSnapshotToMap=(collections)=>{\r\n    const transformedCollection=collections.docs.map(doc=>{\r\n      const {title,items}=doc.data();\r\n      return {\r\n\r\n        routeName:encodeURI(title.toLowerCase()),\r\n        id:doc.id,\r\n        title,\r\n        items\r\n      }\r\n    });\r\n\r\n    return transformedCollection.reduce((accumulator,collection) =>{\r\n      accumulator[collection.title.toLowerCase()]=collection;\r\n      return accumulator;\r\n    },{});\r\n  };\r\n  firebase.initializeApp(config);\r\n\r\n\r\n  export const getCurrentUser=() =>{\r\n    return new Promise((resolve,reject) => {\r\n       const unsubscribe=auth.onAuthStateChanged(userAuth =>{\r\n         unsubscribe();\r\n         resolve(userAuth);\r\n       },reject) \r\n\r\n    });\r\n  }\r\n\r\n  export const auth=firebase.auth();\r\n  export const firestore=firebase.firestore();\r\n\r\n  export const googleProvider=new firebase.auth.GoogleAuthProvider();\r\n  googleProvider.setCustomParameters({prompt:'select_account'});\r\n  export const signInWithGoogle =() =>auth.signInWithPopup(googleProvider);\r\n  export default firebase;\r\n"]},"metadata":{},"sourceType":"module"}