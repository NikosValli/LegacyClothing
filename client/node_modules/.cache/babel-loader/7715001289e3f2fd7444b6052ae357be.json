{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nikos val\\\\myshopapp\\\\client\\\\src\\\\components\\\\sign-up\\\\sign-up.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button-component';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport './sign-up.styles.scss';\n\nconst SignUp = ({\n  signUpStart\n}) => {\n  const [userCredentials, setUserCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const {\n    displayName,\n    email,\n    password,\n    confirmPassword\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password != confirmPassword) {\n      alert(\"Passwords dont match\");\n      return;\n    }\n\n    signUpStart({\n      displayName,\n      email,\n      password\n    });\n  };\n\n  const handleChange = event => {\n    const {\n      name,\n      value\n    } = event.target;\n    setUserCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-up\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 2\n    }\n  }, \"I do not have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 2\n    }\n  }, \"Sign up with your email and password \"), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"sign-up-form\",\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 2\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    name: \"displayName\",\n    value: displayName,\n    onChange: handleChange,\n    label: \"Display Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 2\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    name: \"email\",\n    value: email,\n    onChange: handleChange,\n    label: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 2\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"password\",\n    value: password,\n    onChange: handleChange,\n    label: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 2\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    name: \"confirmPassword\",\n    value: confirmPassword,\n    onChange: handleChange,\n    label: \"Confirm Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 2\n    }\n  }), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 2\n    }\n  }, \" Sign Up\")));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials => dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(null, mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["C:/Users/nikos val/myshopapp/client/src/components/sign-up/sign-up.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","signUpStart","SignUp","userCredentials","setUserCredentials","displayName","email","password","confirmPassword","handleSubmit","event","preventDefault","alert","handleChange","name","value","target","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport {connect} from 'react-redux';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button-component';\r\n\r\nimport {signUpStart} from '../../redux/user/user.actions';\r\nimport './sign-up.styles.scss';\r\n\r\nconst SignUp= ({signUpStart}) => {\r\n\r\n    const [userCredentials,setUserCredentials]=useState({\r\n        displayName:'',\r\n        email:'',\r\n        password:'',\r\n        confirmPassword:''\r\n    });\r\n\r\nconst {displayName,email,password,confirmPassword}=userCredentials;\r\n\r\nconst handleSubmit=async event => {\r\n    event.preventDefault();\r\n    \r\n\r\n    if (password != confirmPassword){\r\n        alert(\"Passwords dont match\");\r\n        return;\r\n    }\r\n\r\n    signUpStart({displayName,email,password});\r\n\r\n   \r\n};\r\n\r\nconst handleChange=event =>{\r\n    const {name,value}=event.target;\r\n\r\n    setUserCredentials({...userCredentials,[name]:value});\r\n}\r\n\r\n\r\n    return(\r\n<div className='sign-up'>\r\n <h2 className='title'>I do not have an account</h2>\r\n <span>Sign up with your email and password </span>\r\n <form className='sign-up-form' onSubmit={handleSubmit}>\r\n\r\n <FormInput\r\n type='text'\r\n name='displayName'\r\n value={displayName}\r\n onChange={handleChange}\r\n label='Display Name'\r\n required\r\n />\r\n <FormInput\r\n type='email'\r\n name='email'\r\n value={email}\r\n onChange={handleChange}\r\n label='Email'\r\n required\r\n />\r\n \r\n <FormInput\r\n type='password'\r\n name='password'\r\n value={password}\r\n onChange={handleChange}\r\n label='Password'\r\n required\r\n />\r\n <FormInput\r\n type='password'\r\n name='confirmPassword'\r\n value={confirmPassword}\r\n onChange={handleChange}\r\n label='Confirm Password'\r\n required\r\n />\r\n <CustomButton type='submit'> Sign Up</CustomButton>\r\n \r\n </form>\r\n\r\n</div>\r\n\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapDispatchToProps=dispatch => ({\r\n    signUpStart:userCredentials=>dispatch(signUpStart(userCredentials))\r\n})\r\nexport default connect (null,mapDispatchToProps) (SignUp);"]},"metadata":{},"sourceType":"module"}