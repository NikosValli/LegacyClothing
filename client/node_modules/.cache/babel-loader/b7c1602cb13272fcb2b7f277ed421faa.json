{"ast":null,"code":"import { createSelector } from 'reselect';\n\nconst selectCart = state => state.cart;\n\nexport const selectCartItems = createSelector([selectCart], cart => cart.cartItems);\nexport const selectCartHidden = createSelector([selectCart], cart => cart.hidden);\nexport const selectCartItemsCount = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity, 0));\nexport const selectCartTotal = createSelector([selectCartItems], cartItems => cartItems.reduce((accumalatedQuantity, cartItem) => accumalatedQuantity + cartItem.quantity * cartItem.price, 0));","map":{"version":3,"sources":["C:/Users/nikos val/myshopapp/client/src/redux/cart/cart.selectors.js"],"names":["createSelector","selectCart","state","cart","selectCartItems","cartItems","selectCartHidden","hidden","selectCartItemsCount","reduce","accumalatedQuantity","cartItem","quantity","selectCartTotal","price"],"mappings":"AAAA,SAAQA,cAAR,QAA6B,UAA7B;;AAEA,MAAMC,UAAU,GAAEC,KAAK,IAAEA,KAAK,CAACC,IAA/B;;AAEA,OAAO,MAAMC,eAAe,GAACJ,cAAc,CAC3C,CAACC,UAAD,CAD2C,EAE3CE,IAAI,IAAIA,IAAI,CAACE,SAF8B,CAApC;AAKP,OAAO,MAAMC,gBAAgB,GAACN,cAAc,CACxC,CAACC,UAAD,CADwC,EAExCE,IAAI,IAAEA,IAAI,CAACI,MAF6B,CAArC;AAKP,OAAO,MAAMC,oBAAoB,GAACR,cAAc,CAChD,CAACI,eAAD,CADgD,EAEhDC,SAAS,IACTA,SAAS,CAACI,MAAV,CACI,CAACC,mBAAD,EAAqBC,QAArB,KACGD,mBAAmB,GAAGC,QAAQ,CAACC,QAFtC,EAGI,CAHJ,CAHgD,CAAzC;AAUP,OAAO,MAAMC,eAAe,GAACb,cAAc,CACvC,CAACI,eAAD,CADuC,EAEvCC,SAAS,IACbA,SAAS,CAACI,MAAV,CACI,CAACC,mBAAD,EAAqBC,QAArB,KACGD,mBAAmB,GAAGC,QAAQ,CAACC,QAAT,GAAmBD,QAAQ,CAACG,KAFzD,EAGI,CAHJ,CAH2C,CAApC","sourcesContent":["import {createSelector} from 'reselect';\r\n\r\nconst selectCart= state=>state.cart;\r\n\r\nexport const selectCartItems=createSelector(\r\n[selectCart],\r\ncart => cart.cartItems\r\n);\r\n\r\nexport const selectCartHidden=createSelector(\r\n    [selectCart],\r\n    cart=>cart.hidden\r\n)\r\n\r\nexport const selectCartItemsCount=createSelector(\r\n[selectCartItems],\r\ncartItems =>\r\ncartItems.reduce(\r\n    (accumalatedQuantity,cartItem) => \r\n       accumalatedQuantity + cartItem.quantity,\r\n    0\r\n    )\r\n);\r\n\r\nexport const selectCartTotal=createSelector(\r\n    [selectCartItems],\r\n    cartItems =>\r\ncartItems.reduce(\r\n    (accumalatedQuantity,cartItem) => \r\n       accumalatedQuantity + cartItem.quantity* cartItem.price,\r\n    0\r\n    )\r\n)"]},"metadata":{},"sourceType":"module"}