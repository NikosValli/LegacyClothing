{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\nikos val\\\\myshopapp\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collection-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { updateCollections } from '../../redux/shop/shop.actions';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\n\nclass ShopPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.unsubscribeFromSnapshot = null;\n  }\n\n  componentDidMount() {\n    const collectionRef = firestore.collection('collections');\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      console.log(collectionsMap);\n    });\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      component: CollectionsOverview,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      component: CollectionPage,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 24\n      }\n    }));\n  }\n\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n});\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/users/nikos val/myshopapp/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","updateCollections","firestore","convertCollectionsSnapshotToMap","ShopPage","Component","unsubscribeFromSnapshot","componentDidMount","collectionRef","collection","onSnapshot","snapshot","collectionsMap","console","log","render","match","props","path","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,mBAAP,MAAgC,qEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,iBAAR,QAAgC,+BAAhC;AAEA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,+BAAxD;;AACA,MAAMC,QAAN,SAAuBR,KAAK,CAACS,SAA7B,CAAsC;AAAA;AAAA;AAAA,SAClCC,uBADkC,GACV,IADU;AAAA;;AAIlCC,EAAAA,iBAAiB,GAAE;AAEf,UAAMC,aAAa,GAACN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAApB;AAED,SAAKH,uBAAL,GAA6BE,aAAa,CAACE,UAAd,CAAyB,MAAMC,QAAN,IAAiB;AACpE,YAAMC,cAAc,GAAET,+BAA+B,CAACQ,QAAD,CAArD;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAYF,cAAZ;AAED,KAJ2B,CAA7B;AAKF;;AACDG,EAAAA,MAAM,GAAE;AACZ,UAAM;AAACC,MAAAA;AAAD,QAAQ,KAAKC,KAAnB;AACQ,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGW,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAED,KAAK,CAACE,IAAK,EAAjC;AAAoC,MAAA,SAAS,EAAEnB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHX,eAIW,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEiB,KAAK,CAACE,IAAK,gBAA3B;AAA4C,MAAA,SAAS,EAAElB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJX,CADJ;AAcC;;AA9B6B;;AAmCtC,MAAMmB,kBAAkB,GAACC,QAAQ,KAAI;AACjCnB,EAAAA,iBAAiB,EAACW,cAAc,IAChCQ,QAAQ,CAACnB,iBAAiB,CAACW,cAAD,CAAlB;AAFyB,CAAJ,CAAjC;;AAIA,eAAed,OAAO,CAAC,IAAD,EAAMqB,kBAAN,CAAP,CAAiCf,QAAjC,CAAf","sourcesContent":["import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport CollectionsOverview from '../../components/collections-overview/collection-overview.component';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport {updateCollections} from '../../redux/shop/shop.actions';\r\n\r\nimport {firestore,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\r\nclass ShopPage extends React.Component{\r\n    unsubscribeFromSnapshot=null;\r\n\r\n\r\n    componentDidMount(){\r\n\r\n        const collectionRef=firestore.collection('collections');\r\n\r\n       this.unsubscribeFromSnapshot=collectionRef.onSnapshot(async snapshot =>{\r\n          const collectionsMap= convertCollectionsSnapshotToMap(snapshot);\r\n          console.log(collectionsMap);\r\n\r\n        });\r\n    }\r\n    render(){\r\nconst {match}=this.props;\r\n        return(\r\n            <div className='shop-page'>\r\n                \r\n                  \r\n                       <Route exact path={`${match.path}`} component={CollectionsOverview} />\r\n                       <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\r\n                       </div>\r\n    \r\n\r\n\r\n        \r\n    \r\n\r\n\r\n       )};\r\n\r\n        }\r\n\r\n\r\nconst mapDispatchToProps=dispatch =>({\r\n    updateCollections:collectionsMap =>\r\n    dispatch(updateCollections(collectionsMap))\r\n});\r\nexport default connect(null,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}