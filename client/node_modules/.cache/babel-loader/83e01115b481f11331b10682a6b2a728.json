{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport { auth, googleProvider, createUserProfileDocument, getCurrentUser } from '../../firebase/firebase.utils';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure, emailSignInSuccess, emailSignInFailure, checkUserSession, signOutSuccess, signOutFailure } from './user.actions';\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signOut() {\n  try {\n    yield auth.signOut();\n    yield put(signOutSuccess());\n  } catch (error) {\n    yield put(signOutFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* isUserAuthenticated() {\n  try {\n    const userAuth = yield getCurrentUser();\n    if (!userAuth) return;\n    yield getSnapshotFromUserAuth(userAuth);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.CHECK_USER_SESSION, checkUserSession);\n}\nexport function* onSignOutStart() {\n  yield takeLatest(UserActionTypes.SIGN_OUT_START);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart), call(onCheckUserSession), call(onSignOutStart)]);\n}","map":{"version":3,"sources":["C:/users/nikos val/myshopapp/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","auth","googleProvider","createUserProfileDocument","getCurrentUser","UserActionTypes","signInSuccess","signInFailure","emailSignInSuccess","emailSignInFailure","checkUserSession","signOutSuccess","signOutFailure","signInWithGoogle","user","signInWithPopup","getSnapshotFromUserAuth","error","userAuth","userRef","userSnapshot","get","id","data","signOut","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","isUserAuthenticated","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","CHECK_USER_SESSION","onSignOutStart","SIGN_OUT_START","userSagas"],"mappings":"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","sourcesContent":["import {takeLatest,put,all,call} from 'redux-saga/effects';\r\nimport {auth,googleProvider,createUserProfileDocument,getCurrentUser} from '../../firebase/firebase.utils';\r\nimport UserActionTypes from './user.types';\r\nimport {signInSuccess,signInFailure,emailSignInSuccess,emailSignInFailure, checkUserSession,signOutSuccess,signOutFailure} from './user.actions';\r\n\r\nexport function* signInWithGoogle(){\r\ntry{\r\n    const {user}=yield auth.signInWithPopup(googleProvider);\r\n    yield getSnapshotFromUserAuth(user);\r\n}\r\n\r\ncatch(error){\r\nyield put(signInFailure(error));\r\n}\r\n}\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth){\r\n    try{\r\n    const userRef=yield call(createUserProfileDocument,userAuth);\r\n    const userSnapshot=yield userRef.get();\r\n    yield put (signInSuccess ({id:userSnapshot.id,...userSnapshot.data()})\r\n    );\r\n    }catch(error){\r\n       yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* signOut(){\r\n    try{\r\n        yield auth.signOut();\r\n        yield (put(signOutSuccess()))\r\n    }catch(error)\r\n        {\r\n              yield put(signOutFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInWithGoogle);\r\n\r\n}\r\n\r\nexport function* signInWithEmail({payload:{email,password}}){\r\ntry {\r\nconst {user}=yield auth.signInWithEmailAndPassword(email,password);\r\nyield getSnapshotFromUserAuth(user);\r\n}catch(error){\r\n   yield put(signInFailure(error));\r\n}\r\n\r\n}\r\n\r\nexport function* isUserAuthenticated(){\r\n\r\n    try{\r\n       const userAuth=yield getCurrentUser();\r\n       if(!userAuth) return;\r\n       yield getSnapshotFromUserAuth(userAuth);\r\n\r\n\r\n    }catch(error){\r\n\r\n        yield put(signInFailure(error));\r\n    }\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail);\r\n}\r\n\r\nexport function* onCheckUserSession(){\r\n    yield takeLatest(UserActionTypes.CHECK_USER_SESSION,checkUserSession);\r\n}\r\n\r\nexport function* onSignOutStart(){\r\n    yield takeLatest (UserActionTypes.SIGN_OUT_START)\r\n}\r\n\r\nexport function* userSagas(){\r\n    yield all([call(onGoogleSignInStart),call(onEmailSignInStart),call(onCheckUserSession),call(onSignOutStart)]);\r\n\r\n}"]},"metadata":{},"sourceType":"module"}