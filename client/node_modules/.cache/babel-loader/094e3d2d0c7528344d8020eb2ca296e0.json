{"ast":null,"code":"import { createStore, applyMiddleware } from 'redux';\nimport { persistStore } from 'redux-persist';\nimport logger from 'redux-logger';\nimport createSagaMiddleware from 'redux-saga';\nimport rootReducer from './root-reducer';\nimport { fetchCollectionsStart } from './shop/shop.sagas';\nconst sagaMiddleware = createSagaMiddleware();\nconst middlewares = [sagaMiddleware];\n\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nexport const store = createStore(rootReducer, applyMiddleware(...middlewares));\nsagaMiddleware.run(fetchCollectionsStart);\nexport const persistor = persistStore(store);\nexport default {\n  store,\n  persistor\n};","map":{"version":3,"sources":["C:/users/nikos val/myshopapp/src/redux/store.js"],"names":["createStore","applyMiddleware","persistStore","logger","createSagaMiddleware","rootReducer","fetchCollectionsStart","sagaMiddleware","middlewares","process","env","NODE_ENV","push","store","run","persistor"],"mappings":"AAAA,SAAQA,WAAR,EAAoBC,eAApB,QAA0C,OAA1C;AACA,SAAQC,YAAR,QAA2B,eAA3B;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,WAAP,MAAwB,gBAAxB;AACA,SAAQC,qBAAR,QAAoC,mBAApC;AAEA,MAAMC,cAAc,GAACH,oBAAoB,EAAzC;AAEA,MAAMI,WAAW,GAAC,CAACD,cAAD,CAAlB;;AAEA,IAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAuB,aAA3B,EAAyC;AACrCH,EAAAA,WAAW,CAACI,IAAZ,CAAiBT,MAAjB;AACH;;AACD,OAAO,MAAMU,KAAK,GAACb,WAAW,CAACK,WAAD,EAAaJ,eAAe,CAAC,GAAGO,WAAJ,CAA5B,CAAvB;AAEPD,cAAc,CAACO,GAAf,CAAmBR,qBAAnB;AAEA,OAAO,MAAMS,SAAS,GAACb,YAAY,CAACW,KAAD,CAA5B;AACP,eAAe;AAACA,EAAAA,KAAD;AAAOE,EAAAA;AAAP,CAAf","sourcesContent":["import {createStore,applyMiddleware} from 'redux';\r\nimport {persistStore} from 'redux-persist';\r\nimport logger from 'redux-logger';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport rootReducer from './root-reducer';\r\nimport {fetchCollectionsStart} from './shop/shop.sagas';\r\n\r\nconst sagaMiddleware=createSagaMiddleware();\r\n\r\nconst middlewares=[sagaMiddleware];\r\n\r\nif (process.env.NODE_ENV==='development'){\r\n    middlewares.push(logger);\r\n}\r\nexport const store=createStore(rootReducer,applyMiddleware(...middlewares));\r\n\r\nsagaMiddleware.run(fetchCollectionsStart);\r\n\r\nexport const persistor=persistStore(store);\r\nexport default {store,persistor};"]},"metadata":{},"sourceType":"module"}