{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\nikos val\\\\myshopapp\\\\src\\\\components\\\\sign-in\\\\sign-in.component.jsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport './sign-in.styles.scss';\nimport FormInput from '../form-input/form-input.component';\nimport CustomButton from '../custom-button/custom-button-component';\nimport { googleSignInStart, emailSignInStart } from '../../redux/user/user.actions';\n\nconst SignIn = ({\n  emailSignInStart,\n  googleSignInStart\n}) => {\n  const [userCredentials, setCredentials] = useState({\n    email: '',\n    password: ''\n  });\n  const {\n    email,\n    password\n  } = userCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    emailSignInStart(email, password);\n  };\n\n  const handleChange = event => {\n    const {\n      value,\n      name\n    } = event.target;\n    this.setCredentials({ ...userCredentials,\n      [name]: value\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sign-in\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 1\n    }\n  }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 1\n    }\n  }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    name: \"email\",\n    type: \"email\",\n    value: this.state.email,\n    label: \"email\",\n    handleChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    name: \"password\",\n    type: \"password\",\n    value: this.state.password,\n    label: \"password\",\n    handleChange: handleChange,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 1\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttons\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 1\n    }\n  }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n    type: \"button\",\n    onClick: googleSignInStart,\n    isGoogleSignin: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 1\n    }\n  }, \"Sign in With Google\"))));\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) => dispatch(emailSignInStart({\n    email,\n    password\n  }))\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["C:/users/nikos val/myshopapp/src/components/sign-in/sign-in.component.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","userCredentials","setCredentials","email","password","handleSubmit","event","preventDefault","handleChange","value","name","target","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React,{useState} from 'react';\r\nimport {connect} from 'react-redux';\r\n\r\nimport './sign-in.styles.scss';\r\nimport FormInput from '../form-input/form-input.component';\r\nimport CustomButton from '../custom-button/custom-button-component';\r\nimport {googleSignInStart,emailSignInStart} from '../../redux/user/user.actions'; \r\nconst SignIn=({emailSignInStart,googleSignInStart}) => {\r\n    const [userCredentials,setCredentials]=useState({ email:'',password:''})\r\n \r\n\r\nconst {email,password}=userCredentials;\r\n const handleSubmit=async event => {\r\n     event.preventDefault();\r\n     \r\n\r\n emailSignInStart(email,password);\r\n    \r\n };\r\n\r\n const handleChange=event => {\r\n     const {value,name}=event.target;\r\n\r\n    this.setCredentials({...userCredentials,[name]:value})\r\n };\r\n\r\n    return(\r\n<div className='sign-in'>\r\n<h2>I already have an account</h2>\r\n<span>Sign in with your email and password</span>\r\n\r\n<form onSubmit={handleSubmit}>\r\n<FormInput name=\"email\" type=\"email\" value={this.state.email} label=\"email\" handleChange={handleChange} required/>\r\n<FormInput name=\"password\" type=\"password\" value={this.state.password} label=\"password\" handleChange={handleChange} required/>\r\n<div className='buttons'>\r\n<CustomButton type=\"submit\">Sign in</CustomButton>\r\n<CustomButton type='button' onClick={googleSignInStart} isGoogleSignin>\r\n\r\nSign in With Google \r\n\r\n</CustomButton>\r\n</div>\r\n</form>\r\n</div>\r\n\r\n\r\n    );\r\n\r\n\r\n\r\n }\r\n\r\n\r\n\r\nconst mapDispatchToProps=dispatch =>({\r\n    googleSignInStart: () => dispatch(googleSignInStart()),\r\n    emailSignInStart: (email,password) => dispatch(emailSignInStart({email,password}))\r\n})\r\nexport default connect (null,mapDispatchToProps) (SignIn);"]},"metadata":{},"sourceType":"module"}