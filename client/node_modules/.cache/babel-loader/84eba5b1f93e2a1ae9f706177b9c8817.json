{"ast":null,"code":"var _jsxFileName = \"C:\\\\users\\\\nikos val\\\\myshopapp\\\\src\\\\pages\\\\shop\\\\shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { createStructuredSelector } from 'reselect';\nimport { connect } from 'react-redux';\nimport CollectionsOverviewWithSpinner from '../../components/collections-overview/collections-overview.container';\nimport CollectionPage from '../collection/collection.component';\nimport { fetchCollectionsStartAsync } from '../../redux/shop/shop.actions';\nimport { selectIsCollectionFetching } from '../../redux/shop/shop.selectors';\nimport { selectIsCollectionLoaded } from '../../redux/shop/shop.selectors';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\nconst CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  componentDidMount() {\n    const {\n      fetchCollectionsStartAsync\n    } = this.props;\n    fetchCollectionsStartAsync();\n  }\n\n  render() {\n    const {\n      match,\n      isCollectionFetching,\n      isCollectionsLoaded\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"shop-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Route, {\n      exact: true,\n      path: `${match.path}`,\n      render: props => /*#__PURE__*/React.createElement(CollectionsOverviewWithSpinner, Object.assign({\n        isLoading: isCollectionFetching\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 78\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(Route, {\n      path: `${match.path}/:collectionId`,\n      render: props => /*#__PURE__*/React.createElement(CollectionPageWithSpinner, Object.assign({\n        isLoading: !isCollectionsLoaded\n      }, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 85\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 24\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = createStructuredSelector({\n  isCollectionFetching: selectIsCollectionFetching,\n  isCollectionsLoaded: selectIsCollectionLoaded\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchCollectionsStartAsync: () => dispatch(fetchCollectionsStartAsync())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["C:/users/nikos val/myshopapp/src/pages/shop/shop.component.jsx"],"names":["React","Route","createStructuredSelector","connect","CollectionsOverviewWithSpinner","CollectionPage","fetchCollectionsStartAsync","selectIsCollectionFetching","selectIsCollectionLoaded","WithSpinner","CollectionPageWithSpinner","ShopPage","Component","componentDidMount","props","render","match","isCollectionFetching","isCollectionsLoaded","path","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAOC,wBAAP,QAAsC,UAAtC;AACA,SAAQC,OAAR,QAAsB,aAAtB;AACA,OAAOC,8BAAP,MAA2C,sEAA3C;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AACA,SAAQC,0BAAR,QAAyC,+BAAzC;AACA,SAAQC,0BAAR,QAAyC,iCAAzC;AACA,SAAQC,wBAAR,QAAuC,iCAAvC;AACA,OAAOC,WAAP,MAAwB,sDAAxB;AACA,MAAMC,yBAAyB,GAACD,WAAW,CAACJ,cAAD,CAA3C;;AAGA,MAAMM,QAAN,SAAuBX,KAAK,CAACY,SAA7B,CAAsC;AAIlCC,EAAAA,iBAAiB,GAAE;AACf,UAAM;AAACP,MAAAA;AAAD,QAA6B,KAAKQ,KAAxC;AACAR,IAAAA,0BAA0B;AAE7B;;AACDS,EAAAA,MAAM,GAAE;AACZ,UAAM;AAACC,MAAAA,KAAD;AAAOC,MAAAA,oBAAP;AAA4BC,MAAAA;AAA5B,QAAiD,KAAKJ,KAA5D;AACQ,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAGW,oBAAC,KAAD;AAAO,MAAA,KAAK,MAAZ;AAAa,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,EAAjC;AAAoC,MAAA,MAAM,EAAEL,KAAK,iBAAK,oBAAC,8BAAD;AAAgC,QAAA,SAAS,EAAEG;AAA3C,SAAqEH,KAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHX,eAIW,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAG,GAAEE,KAAK,CAACG,IAAK,gBAA3B;AAA4C,MAAA,MAAM,EAAEL,KAAK,iBAAI,oBAAC,yBAAD;AAA2B,QAAA,SAAS,EAAE,CAACI;AAAvC,SAAgEJ,KAAhE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJX,CADJ;AAcC;;AAzB6B;;AA6B9B,MAAMM,eAAe,GAAClB,wBAAwB,CAAC;AAC3Ce,EAAAA,oBAAoB,EAACV,0BADsB;AAE3CW,EAAAA,mBAAmB,EAACV;AAFuB,CAAD,CAA9C;;AAMR,MAAMa,kBAAkB,GAACC,QAAQ,KAAI;AAEjChB,EAAAA,0BAA0B,EAAC,MAAKgB,QAAQ,CAAChB,0BAA0B,EAA3B;AAFP,CAAJ,CAAjC;;AAIA,eAAeH,OAAO,CAACiB,eAAD,EAAiBC,kBAAjB,CAAP,CAA4CV,QAA5C,CAAf","sourcesContent":["import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport{createStructuredSelector} from 'reselect';\r\nimport {connect} from 'react-redux';\r\nimport CollectionsOverviewWithSpinner from '../../components/collections-overview/collections-overview.container';\r\nimport CollectionPage from '../collection/collection.component';\r\nimport {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions';\r\nimport {selectIsCollectionFetching} from '../../redux/shop/shop.selectors';\r\nimport {selectIsCollectionLoaded} from '../../redux/shop/shop.selectors';\r\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\r\nconst CollectionPageWithSpinner=WithSpinner(CollectionPage);\r\n\r\n\r\nclass ShopPage extends React.Component{\r\n\r\n\r\n\r\n    componentDidMount(){\r\n        const {fetchCollectionsStartAsync}=this.props;\r\n        fetchCollectionsStartAsync();\r\n     \r\n    }\r\n    render(){\r\nconst {match,isCollectionFetching,isCollectionsLoaded}=this.props;\r\n        return(\r\n            <div className='shop-page'>\r\n                \r\n                  \r\n                       <Route exact path={`${match.path}`} render={props => (<CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />)}/>\r\n                       <Route path={`${match.path}/:collectionId`} render={props =>(<CollectionPageWithSpinner isLoading={!isCollectionsLoaded} {...props}  /> )} />\r\n                       </div>\r\n    \r\n\r\n\r\n        \r\n    \r\n\r\n\r\n       )};\r\n\r\n        }\r\n\r\n        const mapStateToProps=createStructuredSelector({\r\n            isCollectionFetching:selectIsCollectionFetching,\r\n            isCollectionsLoaded:selectIsCollectionLoaded\r\n        });\r\n\r\n\r\nconst mapDispatchToProps=dispatch =>({\r\n    \r\n    fetchCollectionsStartAsync:() =>dispatch(fetchCollectionsStartAsync())\r\n});\r\nexport default connect(mapStateToProps,mapDispatchToProps)(ShopPage);"]},"metadata":{},"sourceType":"module"}